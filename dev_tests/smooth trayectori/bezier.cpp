#include <opencv2/opencv.hpp>
#include <vector>

struct Punto {
    float x, y;
};

// Función para calcular un punto en una curva de Bézier cúbica
Punto bezierCubica(float t, const Punto& p0, const Punto& p1, const Punto& p2, const Punto& p3) {
    float u = 1 - t;
    float tt = t * t;
    float uu = u * u;
    float uuu = uu * u;
    float ttt = tt * t;

    Punto punto;
    punto.x = uuu * p0.x + 3 * uu * t * p1.x + 3 * u * tt * p2.x + ttt * p3.x;
    punto.y = uuu * p0.y + 3 * uu * t * p1.y + 3 * u * tt * p2.y + ttt * p3.y;

    return punto;
}

// Función para suavizar la trayectoria con curvas de Bézier
std::vector<Punto> suavizarTrayectoriaBezier(const std::vector<Punto>& puntos) {
    std::vector<Punto> suavizados;
    if (puntos.size() < 4) return puntos;  // Se necesitan al menos 4 puntos

    for (size_t i = 0; i < puntos.size() - 3; i += 3) {
        for (float t = 0; t <= 1; t += 0.05) {  // Genera puntos suaves en la curva
            suavizados.push_back(bezierCubica(t, puntos[i], puntos[i + 1], puntos[i + 2], puntos[i + 3]));
        }
    }

    return suavizados;
}

// Función para dibujar una trayectoria con un color específico
void dibujarTrayectoria(cv::Mat& imagen, const std::vector<Punto>& puntos, cv::Scalar color, int grosor) {
    for (size_t i = 1; i < puntos.size(); ++i) {
        cv::line(imagen, cv::Point(puntos[i - 1].x * 5, 500 - puntos[i - 1].y * 5),
                 cv::Point(puntos[i].x * 5, 500 - puntos[i].y * 5), color, grosor);
    }
}



int main() {
// std::vector<Punto> puntosOriginales = {
//     {75, 12}, {71, 13}, {67, 13}, {66, 14},
//     {53, 20}, {51, 21}, {48, 24}, {48, 24},
//     {33, 36}, {32, 37}, {31, 39}, {31, 39},
//     {29, 46}, {29, 48}, {29, 51}, {29, 52},
//     {35, 77}, {36, 80}, {38, 84}, {38, 85},
//     {40, 91}, {41, 92}, {43, 93}, {44, 93},
//     {75, 94}, {77, 94}, {79, 94}, {79, 94},
//     {85, 91}, {87, 91}, {89, 89}, {91, 89},
//     {100, 83},{102, 81}, {103, 80}, {103, 80},
//     {103, 61},
// };
std::vector<Punto> puntosOriginales = {
{98,42},{97,36},{97,34},{97,33},{97,32},{97,31},
{96,30},{96,28},{85,25},{85,25},{84,25},{82,25},
{81,25},{77,26},{70,27},{68,27},{67,28},{65,28},
{63,28},{57,29},{53,29},{53,29},{52,29},{51,29},
{50,29},{46,29},{43,29},{42,29},{41,29},{40,29},
{39,29},{36,29},{33,29},{33,30},{33,31},{33,33},
{33,34},{33,39},{33,42},{33,44},{33,45},{32,47},
{32,48},{32,52},{32,57},{32,58},{32,59},{32,61},
{32,62},{32,66},{32,72},{32,73},{32,75},{33,77},
{33,78},{33,81},{33,84},{33,85},{34,85},{35,87},
{36,87},{38,88},{40,89},{41,90},{42,90},{43,90},
{44,90},{46,91},{50,91},{51,90},{52,90},{53,90},
{54,90},{58,89},{60,89},{61,89},{62,89},{63,89},
{64,90},{68,90},{73,90},{74,90},{75,90},{77,90},
{79,90},{84,89},{88,89},{89,89},{91,89},{92,90},
{93,90},{98,77},{98,73},{98,71},{98,71},{96,71},
{96,71},{92,70},{89,70},{88,70},{87,70},{84,70},
{83,70},{77,70},{73,71},{72,71},{71,71},{70,71},
{69,71},{65,71},{61,71},{60,71},{58,71},{57,71},
{56,71},{53,71},{53,69},{53,67},{53,66},{53,64},
{53,62},{53,58},{53,54},{53,53},{53,52},{53,52},
{53,51},{54,49},{57,49},{58,50},{59,50},{60,50},
{61,50},{65,50},{69,50},{70,50},{72,49},{74,49},
{75,49},{79,48},{83,48},{87,48}
};

// std::vector<Punto> puntosOriginales = {
//     {75, 12}, {73, 12}, {71, 13}, {70, 13}, {67, 13}, {66, 14}, {64, 14},
//     {53, 20}, {51, 21}, {51, 21}, {50, 22}, {48, 24}, {48, 24}, {46, 26},
//     {42, 31}, {41, 31}, {41, 32}, {40, 32}, {39, 33}, {39, 33}, {38, 34},
//     {33, 36}, {33, 37}, {32, 37}, {32, 38}, {31, 39}, {31, 39}, {31, 40},
//     {29, 46}, {29, 47}, {29, 48}, {29, 49}, {29, 51}, {29, 52}, {30, 54},
//     {32, 65}, {32, 65}, {33, 67}, {33, 68}, {34, 70}, {34, 71}, {34, 71},
//     {35, 77}, {36, 78}, {36, 80}, {37, 81}, {38, 84}, {38, 85}, {38, 87},
//     {40, 91}, {40, 91}, {41, 92}, {42, 92}, {43, 93}, {44, 93}, {45, 93},
//     {55, 94}, {57, 94}, {59, 94}, {60, 93}, {62, 93}, {64, 93}, {66, 93},
//     {75, 94}, {76, 94}, {77, 94}, {78, 94}, {79, 94}, {79, 94}, {80, 94},
//     {85, 91}, {86, 91}, {87, 91}, {87, 90}, {89, 89}, {91, 89}, {93, 88},
//     {100, 83}, {101, 83}, {102, 81}, {102, 81}, {103, 80}, {103, 80},
//     {106, 72}, {106, 71}, {104, 62}, {104, 61}, {104, 61}, {103, 61},
//     {103, 61}, {103, 60}
// };
// std::vector<Punto> puntosOriginales = {
//     {75, 12}, {73, 12}, {72, 13}, {71, 13}, {70, 13}, {69, 13}, {67, 13}, {66, 14}, {65, 14}, {64, 14},
//     {62, 15}, {62, 15}, {61, 16}, {60, 16}, {59, 17}, {57, 18}, {56, 18}, {55, 19}, {54, 20}, {53, 20},
//     {53, 20}, {51, 21}, {51, 21}, {51, 21}, {50, 22}, {49, 23}, {48, 24}, {48, 24}, {47, 25}, {46, 26},
//     {46, 27}, {45, 27}, {45, 27}, {45, 28}, {44, 28}, {44, 29}, {43, 29}, {43, 30}, {43, 30}, {42, 30},
//     {42, 31}, {41, 31}, {41, 31}, {41, 32}, {40, 32}, {40, 32}, {39, 33}, {39, 33}, {38, 33}, {38, 34},
//     {38, 34}, {37, 34}, {37, 34}, {37, 34}, {36, 35}, {36, 35}, {35, 35}, {35, 35}, {34, 35}, {34, 36},
//     {33, 36}, {33, 37}, {32, 37}, {32, 37}, {32, 38}, {31, 39}, {31, 39}, {31, 39}, {31, 40}, {31, 40},
//     {30, 40}, {30, 41}, {30, 41}, {30, 41}, {30, 41}, {30, 42}, {29, 42}, {29, 43}, {29, 44}, {29, 45},
//     {29, 46}, {29, 47}, {29, 48}, {29, 48}, {29, 49}, {29, 50}, {29, 51}, {29, 52}, {30, 54}, {30, 54},
//     {30, 56}, {30, 57}, {30, 57}, {31, 58}, {31, 59}, {31, 61}, {31, 62}, {32, 63}, {32, 64}, {32, 64},
//     {32, 65}, {32, 65}, {33, 66}, {33, 67}, {33, 68}, {33, 69}, {34, 70}, {34, 71}, {34, 71}, {34, 71},
//     {34, 72}, {34, 72}, {34, 72}, {34, 73}, {35, 73}, {35, 73}, {35, 74}, {35, 74}, {35, 75}, {35, 76},
//     {35, 77}, {36, 78}, {36, 79}, {36, 80}, {37, 81}, {37, 82}, {38, 84}, {38, 85}, {38, 86}, {38, 87},
//     {38, 88}, {38, 88}, {38, 88}, {38, 88}, {39, 89}, {39, 89}, {39, 89}, {39, 90}, {39, 90}, {40, 90},
//     {40, 91}, {40, 91}, {41, 92}, {41, 92}, {42, 92}, {43, 93}, {43, 93}, {44, 93}, {44, 93}, {45, 93},
//     {45, 93}, {46, 94}, {47, 94}, {48, 94}, {49, 94}, {50, 94}, {51, 94}, {52, 94}, {53, 94}, {54, 94},
//     {55, 94}, {57, 94}, {58, 94}, {59, 94}, {60, 93}, {62, 93}, {62, 93}, {64, 93}, {65, 93}, {66, 93},
//     {67, 93}, {68, 93}, {69, 93}, {69, 94}, {70, 94}, {71, 94}, {72, 94}, {72, 94}, {73, 94}, {74, 94},
//     {75, 94}, {76, 94}, {76, 94}, {77, 94}, {78, 94}, {78, 94}, {79, 94}, {79, 94}, {80, 94}, {80, 94},
//     {80, 94}, {81, 93}, {81, 93}, {82, 93}, {83, 92}, {83, 92}, {84, 92}, {84, 92}, {85, 91}, {85, 91},
//     {85, 91}, {86, 91}, {87, 91}, {87, 91}, {87, 90}, {88, 90}, {89, 89}, {91, 89}, {92, 88}, {93, 88},
//     {94, 88}, {95, 87}, {95, 87}, {96, 87}, {96, 87}, {97, 87}, {97, 86}, {98, 86}, {98, 85}, {99, 84},
//     {100, 83}, {101, 83}, {101, 82}, {102, 81}, {102, 81}, {103, 80}, {103, 80}, {103, 80}, {104, 79},
//     {104, 79}, {104, 79}, {104, 78}, {105, 78}, {105, 77}, {105, 76}, {106, 75}, {106, 74}, {106, 73},
//     {106, 72}, {106, 71}, {105, 65}, {104, 62}, {104, 61}, {104, 61}, {104, 61}, {103, 61}, {103, 61},
//     {103, 61}, {103, 60}, {103, 60}
// };


    std::vector<Punto> puntosSuavizados = suavizarTrayectoriaBezier(puntosOriginales);

    // Crear la imagen en negro
    cv::Mat imagen = cv::Mat::zeros(500, 500, CV_8UC3);

    // Dibujar la trayectoria original en rojo
    dibujarTrayectoria(imagen, puntosOriginales, cv::Scalar(0, 0, 255), 2); // Rojo

    // Dibujar la trayectoria suavizada en verde
    dibujarTrayectoria(imagen, puntosSuavizados, cv::Scalar(0, 255, 0), 2); // Verde

    // Mostrar la imagen con ambas trayectorias
    cv::imshow("Trayectoria Original (Rojo) vs Suavizada (Verde)", imagen);
    cv::waitKey(0);

    return 0;
}
